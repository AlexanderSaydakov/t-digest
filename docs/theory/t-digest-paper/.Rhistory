boxplot(error ~ dist, e)
boxplot(error ~ dist, e)
boxplot(error ~ x | dist, e)
boxplot(error ~ x , e)
boxplot(error ~ Q , e)
boxplot(error ~ Q , e[e$dist='uniform',])
boxplot(error ~ Q , e[e$dist=='uniform',])
e = read.delim("error.tsv")#
plotError = function(dist, plot) {#
  png(plot, width=1800, height=1800, pointsize=92)#
  boxplot(error ~ Q , e[e$dist==dist,], ylim=0.005)#
  abline(h=0.003, lty=2, lwd=6)#
  abline(h=-0.003, lty=2, lwd=6)#
  dev.off()#
}#
plotError('uniform', 'uniform-error.png')#
plotError('gamma', 'gamma-error.png')
e = read.delim("error.tsv")#
plotError = function(dist, plot) {#
  png(plot, width=1800, height=1800, pointsize=92)#
  boxplot(error ~ Q , e[e$dist==dist,], ylim=c(-0.005,0.005))#
  abline(h=0.003, lty=2, lwd=6)#
  abline(h=-0.003, lty=2, lwd=6)#
  dev.off()#
}#
plotError('uniform', 'uniform-error.png')#
plotError('gamma', 'gamma-error.png')
?boxplot
?segment
library(segmented)
?segmented
x = data.frame(t=seq(0,100,by=1))
x$y=((x$t-50)/10)^2
plot(y~t, x)
x$y=((x$t-50)/10)^2 + rnorm(101,0,4)
plot(y~t, x)
x$before = x$t < 20
x$after = x$t > 80
x
x$t1 = x$t * x$before
x$t2 = x$t * x$after
plot(x)
lm(y~t1+t2+before+after)
lm(y~t1+t2+before+after, x)
plot(x$t, predict(lm(y~t1+t2+before+after, x)))
m=lm(y~t1+t2+before+after, x)
m$coefficients
m$coefficients$beforeTRUE
m$coefficients[3]
m$coefficients[4]
m$coefficients[4]*m$coefficients[3]
m$coefficients[4]*m$coefficients[2]
plot(x$t, predict(lm(y~t1+t2+before+after, x)), ylim=c(0,25))
points(x$t, x$y, cex=0.2)
m$coefficients[2]
m$coefficients[4]/m$coefficients[2]
x$before = x$t < 46.7
m=lm(y~t1+t2+before+after, x)
m
plot(x$t, predict(lm(y~t1+t2+before+after, x)), ylim=c(0,25))
x$t1 = x$t * x$before
plot(x$t, predict(lm(y~t1+t2+before+after, x)), ylim=c(0,25))
m=lm(y~t1+t2+before+after, x)
plot(x$t, predict(lm(y~t1+t2+before+after, x)), ylim=c(0,25))
4.8/.52
x$before = x$t < 38
x$t1 = x$t * x$before
m=lm(y~t1+t2+before+after, x)
plot(x$t, predict(lm(y~t1+t2+before+after, x)), ylim=c(0,25))
m
-57/.79
x$after = x$t > 60
x$t2 = x$t * x$after
m=lm(y~t1+t2+before+after, x)
plot(x$t, predict(lm(y~t1+t2+before+after, x)), ylim=c(0,25))
x$before = x$t < 36
x$after = x$t > 64
x$t2 = x$t * x$after
x$t1 = x$t * x$before
m=lm(y~t1+t2+before+after, x)
plot(x$t, predict(lm(y~t1+t2+before+after, x)), ylim=c(0,25))
x$after = x$t > 64
x$t2 = x$t * x$after
m=lm(y~t1+t2+before+after, x)
plot(x$t, predict(lm(y~t1+t2+before+after, x)), ylim=c(0,25))
x$after = x$t > 68
x$t2 = x$t * x$after
m=lm(y~t1+t2+before+after, x)
plot(x$t, predict(lm(y~t1+t2+before+after, x)), ylim=c(0,25))
points(x$t, x$y, cex=0.2)
plot(x$t, predict(lm(y~t1+t2+before+after, x)), ylim=c(-10,25))
points(x$t, x$y, cex=0.2)
?box
?plot
?boxplot
q = 100000/3300 * seq(0,1,length.out=3300)*(1-seq(0,1,length.out=3300))
plot(q)
100000/3300
sum(q)
q = 4*100000/3300 * seq(0,1,length.out=3300)*(1-seq(0,1,length.out=3300))
sum(q)
q = 6*100000/3300 * seq(0,1,length.out=3300)*(1-seq(0,1,length.out=3300))
sum(q)
plot(q)
plot(cumsum(q))
plot(cumsum(q), type='l')
lines(100000*(q*q/2-q^3/3))
max(q)
k=seq(0,1,length.out=3300)
lines(100000*(k*k/2-k^3/3))
lines(6*100000*(k*k/2-k^3/3))
lines(6*100000*(k*k/2-k^3/3), col='red')
f = function(x) { punif(x)*1e-3+pnorm(x, 0, 1e-10)*0.999}
f(0.1)
f = function(x) { punif(x, -1, 1)*1e-3+pnorm(x, 0, 1e-10)*0.999}
f(0)
f(0.1)
f(-0.1)
f(-0.05)
f(-0.01)
f(-0.02)
f(-0.03)
f(-0.001)
f(-0.0001)
f(-0.00001)
f(-0.00000001)
f(-0.00000000001)
f(-0.0000000001)
f(-0.000000001)
f(-0.0000000001)
f(-0.0000000002)
f(-0.0000000003)
f(-0.0000000004)
f(-0.00000000035)
f(-0.00000000032)
f(-0.00000000033)
f(-0.000000000335)
f(-0.000000000332)
f(-0.000000000331)
f(-0.00000000033)
f(-0.00000000032)
f(-0.000000000325)
f(-0.000000000329)
f(-0.0000000003295)
f(-0.0000000003292)
f(-0.0000000003291)
f(-0.000000000329)
f(-0.00000000032905)
f(-0.00000000032903)
f(-0.00000000032902)
f(-0.000000000329025)
f(-0.000000000329022)
f(-0.000000000329023)
f(-0.000000000329024)
f(-0.0000000003290245)
f = function(x) { punif(x, -1, 1)*1e-3+pnorm(x, 0, 1e-10)*0.999}
f = function(x) { punif(x, -1, 1)*1e-3+pnorm(x, 0, 1e-5)*0.999}
qnorm(0.0015)
qnorm(0.00095)*1e-5
f(-3.105434e-05)
f(-3.1055e-05)
f(-3.1e-05)
f(-3.11e-05)
f(-3.2e-05)
f(-3.5e-05)
f(-3.3e-05)
f(-3.25e-05)
f(-3.29e-05)
f(-3.295e-05)
f(-3.294e-05)
f(-3.293e-05)
f(-3.293e-05)
e
y
plot(y)
x
x=1:100
y = (x-60)^2/100+17
plot(x,y)
c1 = 20
c2=50
m = data.frame(v0=x<c1+0, v1=x*(x<c1), v2=x>c2+0, v3=(x>c2)*x)
m$y = y
m$x = x
model = lm(y~v0+v1+v2+v3)
model = lm(y~v0+v1+v2+v3, m)
model
m = data.frame(v0=x<c1*1, v1=x*(x<c1), v2=x>c2*1, v3=(x>c2)*x)
m = data.frame(v0=(x<c1)*1, v1=x*(x<c1), v2=(x>c2)*1, v3=(x>c2)*x)
model = lm(y~v0+v1+v2+v3, m)
model
model$coefficients
model$coefficients[1]*c1+model$coefficients[2]
model$coefficients[2]*c1+model$coefficients[1]
c1
model$coefficients[1]
model$coefficients[2]
model$coefficients[3]*c1+model$coefficients[2]
model$coefficients[3]*c1+model$coefficients[2]-model$coefficients[1]
(model$coefficients[3]*c1+model$coefficients[2]-model$coefficients[1])/model$coefficients[3]
c1 = c1-(model$coefficients[3]*c1+model$coefficients[2]-model$coefficients[1])/model$coefficients[3]
model$coefficients[3]*c1+model$coefficients[2]-model$coefficients[1]
model$coefficients[5]*c1+model$coefficients[4]-model$coefficients[1]
(model$coefficients[5]*c1+model$coefficients[4]-model$coefficients[1])/model$coefficients[5]
(model$coefficients[5]*c2+model$coefficients[4]-model$coefficients[1])/model$coefficients[5]
c2
?abline
abline(model$coefficients[2], model$coefficients[3])
abline(model$coefficients[1]+model$coefficients[2], model$coefficients[3])
c1
c1=20
abline(h=model$coefficients[1])
abline(model$coefficients[1]+model$coefficients[4], model$coefficients[5])
abline(v=c1, lty=2)
model$coefficients[2]+c1*model$coefficients[3]
(model$coefficients[2]+c1*model$coefficients[3])/model$coefficients[3]
c1 = c1-(model$coefficients[2]+c1*model$coefficients[3])/model$coefficients[3]
abline(v=c1, lty=2)
c2 = c2-(model$coefficients[4]+c1*model$coefficients[5])/model$coefficients[5]
abline(v=c2, lty=2)
c2
c2=50
c2 = c2-(model$coefficients[4]+c2*model$coefficients[5])/model$coefficients[5]
abline(v=c2, lty=2)
m = data.frame(v0=(x<c1)*1, v1=x*(x<c1), v2=(x>c2)*1, v3=(x>c2)*x)
model = lm(y~v0+v1+v2+v3, m)
plot(x,y)
abline(v=c1, lty=2)
abline(v=c2, lty=2)
abline(model$coefficients[1]+model$coefficients[4], model$coefficients[5])
abline(h=model$coefficients[1])
abline(model$coefficients[1]+model$coefficients[2], model$coefficients[3])
c1 = c1-(model$coefficients[2]+c1*model$coefficients[3])/model$coefficients[3]
abline(v=c1, lty=2)
c2 = c2-(model$coefficients[4]+c2*model$coefficients[5])/model$coefficients[5]
abline(v=c2, lty=2)
m = data.frame(v0=(x<c1)*1, v1=x*(x<c1), v2=(x>c2)*1, v3=(x>c2)*x)
plot(x,y)
abline(v=c1, lty=2)
abline(v=c2, lty=2)
abline(h=model$coefficients[1])
abline(model$coefficients[1]+model$coefficients[2], model$coefficients[3])
abline(model$coefficients[1]+model$coefficients[4], model$coefficients[5])
m = data.frame(v0=(x<c1)*1, v1=x*(x<c1), v2=(x>c2)*1, v3=(x>c2)*x)
model = lm(y~v0+v1+v2+v3, m)
abline(model$coefficients[1]+model$coefficients[2], model$coefficients[3])
c1 = c1-(model$coefficients[2]+c1*model$coefficients[3])/model$coefficients[3]
abline(v=c1, lty=2)
abline(h=model$coefficients[1])
c2 = c2-(model$coefficients[4]+c2*model$coefficients[5])/model$coefficients[5]
abline(v=c2, lty=2)
m = data.frame(v0=(x<c1)*1, v1=x*(x<c1), v2=(x>c2)*1, v3=(x>c2)*x)
model = lm(y~v0+v1+v2+v3, m)
abline(h=model$coefficients[1])
abline(model$coefficients[1]+model$coefficients[2], model$coefficients[3])
c1 = c1-(model$coefficients[2]+c1*model$coefficients[3])/model$coefficients[3]
abline(v=c1, lty=2)
c2 = c2-(model$coefficients[4]+c2*model$coefficients[5])/model$coefficients[5]
abline(v=c2, lty=2)
abline(model$coefficients[1]+model$coefficients[4], model$coefficients[5])
plot(x,y)
m = data.frame(v0=(x<c1)*1, v1=x*(x<c1), v2=(x>c2)*1, v3=(x>c2)*x)
model = lm(y~v0+v1+v2+v3, m)
abline(v=c2, lty=2)
abline(v=c1, lty=2)
abline(h=model$coefficients[1])
abline(model$coefficients[1]+model$coefficients[4], model$coefficients[5])
abline(model$coefficients[1]+model$coefficients[2], model$coefficients[3])
?plot
?par
?par
?axis
?plot
?box
paste("a", "b", sep='')
plot('gamma')
  plot(actual~i, data[data$tag == tag,], cex=0.2, xaxt='n', yaxt='n', xlim=c(0,2800), xlab='Cluster', ylab='Size')
  plot(actual~i, data[data$tag == tag,], cex=0.2, xaxt='n', yaxt='n')
  plot(actual~i, data[data$tag == tag,], cex=0.2, xlim=c(0,2800), xlab='Cluster', ylab='Size')
  plot(actual~i, data[data$tag == tag,], cex=0.2, xlim=c(0,2800))
q()
n
  plot(actual~i, data[data$tag == tag,], cex=0.2, xaxt='n', yaxt='n', xlim=c(0,2900), ylim=c(0,105), xlab='Cluster', ylab='Centroid size')
  title(title)
  box(lwd=3)
  axis(side=1, at=c(0,1000,2000,3000), labels=c(0,1000,2000,3000), lwd=3)
  axis(side=2, at=c(0,25,50,75,100), labels=c(0,25,50,75,100), lwd=3)
  lines(i, 100*sqrt(1-((i-n2)/n2)^2), lwd=9, lty=2)

tag = 'gamma'
  n = max(data[data$tag == tag, ]$i)
  i = 1:n
  n2 = n/2

  plot(actual~i, data[data$tag == tag,], cex=0.2, xaxt='n', yaxt='n', xlim=c(0,2900), ylim=c(0,105), xlab='Cluster', ylab='Centroid size')
  title(title)
  box(lwd=3)
  axis(side=1, at=c(0,1000,2000,3000), labels=c(0,1000,2000,3000), lwd=3)
  axis(side=2, at=c(0,25,50,75,100), labels=c(0,25,50,75,100), lwd=3)
  lines(i, 100*sqrt(1-((i-n2)/n2)^2), lwd=9, lty=2)

q()
n
q()
n
plot(actual~k, data, cex=0.2)
dev.new()
plot(actual~k, data, cex=0.2)
abline(0,1)
plot(data$k, predict(loess(actual~k, data)))
names(data)
levels(data$tag)
table(data[data$tag=="gamma",]$actual)
hist(data[data$tag=="gamma",]$actual)
dev.new()
hist(data[data$tag=="gamma",]$actual)
sum(data[data$tag=="gamma",]$actual)
length(data[data$tag=="gamma",]$actual)
q
q()
n
getwd()
x = read.delim("accuracy.csv")
plot(x)
plot(x[x$compression=2,])
plot(x[x$compression==2,])
summary(x)
(x[x$compression==2,])
boxplot(error ~ q, x[x$compression==2,])
boxplot(error ~ q|compression, x)
boxplot(error ~ q, x[x$compression==5,])
boxplot(error ~ q, x[x$compression==10,])
x = read.delim("accuracy.csv")
boxplot(error ~ q, x[x$compression==10,])
boxplot(error ~ q, x[x$compression==20,])
summary(x)
table(x$compression)
boxplot(error ~ q, x[x$compression==100,])
x = read.delim("accuracy.csv")
boxplot(error ~ q, x[x$compression==100,])
boxplot(error ~ q, x[x$compression==100,], ylim=c(-0.02,0.02))
boxplot(error ~ q, x[x$compression==20,], ylim=c(-0.02,0.02))
boxplot(error ~ q, x[x$compression==20,], ylim=c(-0.05,0.05))
boxplot(error ~ q, x[x$compression==100,], ylim=c(-0.05,0.05))
boxplot(error ~ q, x[x$compression==20,], ylim=c(-0.05,0.05))
boxplot(error ~ q, x[x$compression==10,], ylim=c(-0.05,0.05))
boxplot(error ~ q, x[x$compression==5,], ylim=c(-0.05,0.05))
boxplot(error ~ q, x[x$compression==2,], ylim=c(-0.05,0.05))
x = read.delim("accuracy.csv")
boxplot(error ~ size, x[x$compression==2 & x$q=0.5,], ylim=c(-0.05,0.05))
boxplot(error ~ size, x[x$compression==2 & x$q==0.5,], ylim=c(-0.05,0.05))
boxplot(error ~ size, x[x$compression==5 & x$q==0.5,], ylim=c(-0.05,0.05))
boxplot(error ~ size, x[x$compression==10 & x$q==0.5,], ylim=c(-0.05,0.05))
summary(x)
boxplot(size ~ compression, x)
boxplot(error ~ compression, x[x$q==0.5,], ylim=c(-0.05,0.05))
boxplot(error ~ compression, x[x$q==0.5,], ylim=c(-0.1,0.1))
plot(error ~ size, x[x$q==0.5,], ylim=c(-0.1,0.1))
plot(error ~ size, x[x$q==0.5,], ylim=c(-0.1,0.1), log='x')
plot(error ~ size, x[x$q==0.001,], ylim=c(-0.1,0.1), log='x')
plot(error ~ size, x[x$q==0.01,], ylim=c(-0.1,0.1), log='x')
plot(error ~ size, x[x$q==0.1,], ylim=c(-0.1,0.1), log='x')
plot(error ~ size, x[x$q==0.001,], ylim=c(-0.1,0.1), log='x')
plot(error ~ size, x[x$q==0.001,], ylim=c(-0.01,0.01), log='x')
plot(error ~ size, x[x$q==0.001,], ylim=c(-0.001,0.001), log='x')
plot(1e6*error ~ size, x[x$q==0.001,], ylim=c(-1000,1000), log='x')
plot(1e6*error ~ size, x[x$q==0.001,], ylim=c(-1000,1000), log='x', ylab="Error (ppm)")
plot(1e6*error ~ size/1e3, x[x$q==0.001,], ylim=c(-1000,1000), log='x', ylab="Error (ppm)")
plot(1e6*error ~ size, x[x$q==0.001,], ylim=c(-1000,1000), log='x', ylab="Error (ppm)")
x$kb = x$size/1e3
plot(1e6*error ~ kb, x[x$q==0.001,], ylim=c(-1000,1000), log='x', ylab="Error (ppm)")
plot(1e6*error ~ kb, x[x$q==0.001,], ylim=c(-1000,1000), log='x', ylab="Error (ppm)", xlab="Size in kB")
plot(1e6*error ~ kb, x[x$q==0.01,], ylim=c(-1000,1000), log='x', ylab="Error (ppm)", xlab="Size in kB")
plot(1e6*error ~ kb, x[x$q==0.01,], ylim=c(-10000,10000), log='x', ylab="Error (ppm)", xlab="Size in kB")
plot(1e6*error ~ kb, x[x$q==0.1,], ylim=c(-10000,10000), log='x', ylab="Error (ppm)", xlab="Size in kB")
plot(1e6*error ~ kb, x[x$q==0.01,], ylim=c(-10000,10000), log='x', ylab="Error (ppm)", xlab="Size in kB")
plot(1e6*error ~ kb, x[x$q==0.1,], ylim=c(-1000,1000), log='x', ylab="Error (ppm)", xlab="Size in kB")
plot(1e6*error ~ kb, x[x$q==0.5,], ylim=c(-1000,1000), log='x', ylab="Error (ppm)", xlab="Size in kB")
plot(100*error ~ kb, x[x$q==0.5,], ylim=c(-1000,1000), log='x', ylab="Error (ppm)", xlab="Size in kB")
plot(100*error ~ kb, x[x$q==0.5,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB")
plot(100*error ~ kb, x[x$q==0.1,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB")
plot(100*error ~ kb, x[x$q==0.01,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB")
plot(100*error ~ kb, x[x$q==0.001,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB")
layout(matrix(c(1,2,3,4), 1, 4, byrow=T), widths=c(1.21,1,1))
plot(100*error ~ kb, x[x$q==0.5,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.5")
plot(100*error ~ kb, x[x$q==0.1,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.1", xaxt='n')
plot(100*error ~ kb, x[x$q==0.01,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.01", xaxt='n')
plot(100*error ~ kb, x[x$q==0.001,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.001", xaxt='n')
dev.off()

dev.new()
layout(matrix(c(1,2,3,4), 1, 4, byrow=T), widths=c(1.21,1,1))
plot(100*error ~ kb, x[x$q==0.5,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.5")
plot(100*error ~ kb, x[x$q==0.1,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.1", xaxt='n')
plot(100*error ~ kb, x[x$q==0.01,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.01", xaxt='n')
plot(100*error ~ kb, x[x$q==0.001,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.001", xaxt='n')

layout(matrix(c(1,2,3,4), 1, 4, byrow=T), widths=c(1.21,1,1))
plot(100*error ~ kb, x[x$q==0.5,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.5")
plot(100*error ~ kb, x[x$q==0.1,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.1", xaxt='n')
plot(100*error ~ kb, x[x$q==0.01,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.01", xaxt='n')
plot(100*error ~ kb, x[x$q==0.001,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.001", xaxt='n')

layout(matrix(c(1,2,3,4), 1, 4, byrow=T), widths=c(1.21,1,1))
plot(100*error ~ kb, x[x$q==0.5,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.5")
plot(100*error ~ kb, x[x$q==0.1,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.1", yaxt='n')
plot(100*error ~ kb, x[x$q==0.01,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.01", yaxt='n')
plot(100*error ~ kb, x[x$q==0.001,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.001", yaxt='n')
dev.new)(
dev.new()
layout(matrix(c(1,2,3,4), 1, 4, byrow=T), widths=c(1.21,1,1))
plot(100*error ~ kb, x[x$q==0.5,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.5")
plot(100*error ~ kb, x[x$q==0.1,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.1", yaxt='n')
plot(100*error ~ kb, x[x$q==0.01,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.01", yaxt='n')
plot(100*error ~ kb, x[x$q==0.001,], ylim=c(-1,1), log='x', ylab="Error (ppm)", xlab="Size in kB", main="q = 0.001", yaxt='n')
par(mar)
par
par()
par()$mar
q()
n
